////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : DisplaySync.vf
// /___/   /\     Timestamp : 01/14/2021 16:16:45
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/Computer_and_logic/Test/ipcore_dir -sympath D:/Computer_and_logic/rom_test/ipcore_dir -intstyle ise -family kintex7 -verilog D:/Computer_and_logic/Bird_flying/DisplaySync.vf -w D:/Computer_and_logic/ScoreBoard/DisplaySync.sch
//Design Name: DisplaySync
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module D2_4E_HXILINX_DisplaySync (D0, D1, D2, D3, A0, A1, E);
    

   output D0;
   output D1;
   output D2;
   output D3;

   input  A0;
   input  A1;
   input  E;
  
   reg D0;
   reg D1;
   reg D2;
   reg D3;

      always @ (A0 or A1 or E)
      begin
         if(!E)
           {D3, D2, D1, D0} <= 4'b0000;
        else
        begin
           case({A1,A0})
             2'b00 : {D3,D2,D1,D0} <= 4'b0001;
             2'b01 : {D3,D2,D1,D0} <= 4'b0010;
             2'b10 : {D3,D2,D1,D0} <= 4'b0100;
             2'b11 : {D3,D2,D1,D0} <= 4'b1000;
          endcase
        end
     end 

endmodule
`timescale 1ns / 1ps

module Mux4to1_MUSER_DisplaySync(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 s, 
                                 O);

    input I0;
    input I1;
    input I2;
    input I3;
    input [1:0] s;
   output O;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   
   AND2  XLXI_1 (.I0(XLXN_3), 
                .I1(XLXN_2), 
                .O(XLXN_14));
   AND2  XLXI_2 (.I0(s[0]), 
                .I1(XLXN_2), 
                .O(XLXN_15));
   AND2  XLXI_3 (.I0(s[1]), 
                .I1(XLXN_3), 
                .O(XLXN_16));
   AND2  XLXI_4 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_17));
   INV  XLXI_5 (.I(s[1]), 
               .O(XLXN_2));
   INV  XLXI_6 (.I(s[0]), 
               .O(XLXN_3));
   AND2  XLXI_7 (.I0(I0), 
                .I1(XLXN_14), 
                .O(XLXN_25));
   AND2  XLXI_8 (.I0(I1), 
                .I1(XLXN_15), 
                .O(XLXN_26));
   AND2  XLXI_9 (.I0(I2), 
                .I1(XLXN_16), 
                .O(XLXN_27));
   AND2  XLXI_10 (.I0(I3), 
                 .I1(XLXN_17), 
                 .O(XLXN_28));
   OR4  XLXI_11 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_26), 
                .I3(XLXN_25), 
                .O(O));
endmodule
`timescale 1ns / 1ps

module Mux4to1b4_MUSER_DisplaySync(I0, 
                                   I1, 
                                   I2, 
                                   I3, 
                                   s, 
                                   o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_28;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_38;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_1));
   INV  XLXI_2 (.I(s[0]), 
               .O(XLXN_3));
   AND2  XLXI_4 (.I0(XLXN_3), 
                .I1(XLXN_1), 
                .O(XLXN_28));
   AND2  XLXI_5 (.I0(s[0]), 
                .I1(XLXN_1), 
                .O(XLXN_19));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(XLXN_3), 
                .O(XLXN_38));
   AND2  XLXI_7 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_31));
   AND2  XLXI_8 (.I0(I0[0]), 
                .I1(XLXN_28), 
                .O(XLXN_14));
   AND2  XLXI_9 (.I0(I1[0]), 
                .I1(XLXN_19), 
                .O(XLXN_15));
   AND2  XLXI_10 (.I0(I2[0]), 
                 .I1(XLXN_38), 
                 .O(XLXN_16));
   AND2  XLXI_11 (.I0(I3[0]), 
                 .I1(XLXN_31), 
                 .O(XLXN_17));
   OR4  XLXI_12 (.I0(XLXN_17), 
                .I1(XLXN_16), 
                .I2(XLXN_15), 
                .I3(XLXN_14), 
                .O(o[0]));
   OR4  XLXI_13 (.I0(XLXN_26), 
                .I1(XLXN_25), 
                .I2(XLXN_24), 
                .I3(XLXN_23), 
                .O(o[1]));
   OR4  XLXI_14 (.I0(XLXN_35), 
                .I1(XLXN_34), 
                .I2(XLXN_33), 
                .I3(XLXN_32), 
                .O(o[2]));
   OR4  XLXI_15 (.I0(XLXN_43), 
                .I1(XLXN_42), 
                .I2(XLXN_41), 
                .I3(XLXN_40), 
                .O(o[3]));
   AND2  XLXI_16 (.I0(I0[1]), 
                 .I1(XLXN_28), 
                 .O(XLXN_23));
   AND2  XLXI_17 (.I0(I1[1]), 
                 .I1(XLXN_19), 
                 .O(XLXN_24));
   AND2  XLXI_18 (.I0(I2[1]), 
                 .I1(XLXN_38), 
                 .O(XLXN_25));
   AND2  XLXI_19 (.I0(I3[1]), 
                 .I1(XLXN_31), 
                 .O(XLXN_26));
   AND2  XLXI_20 (.I0(I0[2]), 
                 .I1(XLXN_28), 
                 .O(XLXN_32));
   AND2  XLXI_21 (.I0(I1[2]), 
                 .I1(XLXN_19), 
                 .O(XLXN_33));
   AND2  XLXI_22 (.I0(I2[2]), 
                 .I1(XLXN_38), 
                 .O(XLXN_34));
   AND2  XLXI_23 (.I0(I3[2]), 
                 .I1(XLXN_31), 
                 .O(XLXN_35));
   AND2  XLXI_24 (.I0(I0[3]), 
                 .I1(XLXN_28), 
                 .O(XLXN_40));
   AND2  XLXI_25 (.I0(I1[3]), 
                 .I1(XLXN_19), 
                 .O(XLXN_41));
   AND2  XLXI_26 (.I0(I2[3]), 
                 .I1(XLXN_38), 
                 .O(XLXN_42));
   AND2  XLXI_27 (.I0(I3[3]), 
                 .I1(XLXN_31), 
                 .O(XLXN_43));
endmodule
`timescale 1ns / 1ps

module DisplaySync(Hexs, 
                   LES, 
                   point, 
                   Scan, 
                   AN, 
                   HEX, 
                   LE, 
                   p);

    input [15:0] Hexs;
    input [3:0] LES;
    input [3:0] point;
    input [1:0] Scan;
   output [3:0] AN;
   output [3:0] HEX;
   output LE;
   output p;
   
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   
   Mux4to1b4_MUSER_DisplaySync  XLXI_1 (.I0(Hexs[3:0]), 
                                       .I1(Hexs[7:4]), 
                                       .I2(Hexs[11:8]), 
                                       .I3(Hexs[15:12]), 
                                       .s(Scan[1:0]), 
                                       .o(HEX[3:0]));
   Mux4to1_MUSER_DisplaySync  XLXI_2 (.I0(point[0]), 
                                     .I1(point[1]), 
                                     .I2(point[2]), 
                                     .I3(point[3]), 
                                     .s(Scan[1:0]), 
                                     .O(p));
   Mux4to1_MUSER_DisplaySync  XLXI_3 (.I0(LES[0]), 
                                     .I1(LES[1]), 
                                     .I2(LES[2]), 
                                     .I3(LES[3]), 
                                     .s(Scan[1:0]), 
                                     .O(LE));
   (* HU_SET = "XLXI_4_0" *) 
   D2_4E_HXILINX_DisplaySync  XLXI_4 (.A0(Scan[0]), 
                                     .A1(Scan[1]), 
                                     .E(XLXN_21), 
                                     .D0(XLXN_17), 
                                     .D1(XLXN_18), 
                                     .D2(XLXN_19), 
                                     .D3(XLXN_20));
   VCC  XLXI_5 (.P(XLXN_21));
   INV  XLXI_6 (.I(XLXN_17), 
               .O(AN[0]));
   INV  XLXI_7 (.I(XLXN_18), 
               .O(AN[1]));
   INV  XLXI_8 (.I(XLXN_19), 
               .O(AN[2]));
   INV  XLXI_9 (.I(XLXN_20), 
               .O(AN[3]));
endmodule
